"""criacao_das_tabelas

Revision ID: 75eec210099d
Revises: 
Create Date: 2024-08-25 19:30:11.799231

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '75eec210099d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('classe',
    sa.Column('nome', sa.String(length=14), nullable=False),
    sa.Column('base_vit', sa.Integer(), nullable=False),
    sa.Column('base_vig', sa.Integer(), nullable=False),
    sa.Column('base_int', sa.Integer(), nullable=False),
    sa.Column('base_fe', sa.Integer(), nullable=False),
    sa.Column('base_dex', sa.Integer(), nullable=False),
    sa.Column('base_str', sa.Integer(), nullable=False),
    sa.CheckConstraint('base_dex >= 0', name='chk_base_dex'),
    sa.CheckConstraint('base_fe >= 0', name='chk_base_fe'),
    sa.CheckConstraint('base_int >= 0', name='chk_base_int'),
    sa.CheckConstraint('base_str >= 0', name='chk_base_str'),
    sa.CheckConstraint('base_vig >= 0', name='chk_base_vig'),
    sa.CheckConstraint('base_vit >= 0', name='chk_base_vit'),
    sa.PrimaryKeyConstraint('nome', name='classe_pkey')
    )
    op.create_table('consumivel',
    sa.Column('id_consumivel', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('efeito', postgresql.ENUM('RestauraHp', 'AumentaAtaque', 'AumentaDefesa', 'GanhaRunas', name='tipo_efeitos'), nullable=False),
    sa.Column('qtd_do_efeito', sa.Integer(), nullable=False),
    sa.Column('descricao', sa.String(length=200), nullable=False),
    sa.CheckConstraint('qtd_do_efeito >= 1', name='chk_qtd_do_efeito'),
    sa.PrimaryKeyConstraint('id_consumivel', name='consumivel_pkey')
    )
    op.create_table('item',
    sa.Column('id_item', sa.Integer(), server_default="nextval('item_id_item_seq'::regclass)", autoincrement=True, nullable=False),
    sa.Column('eh_chave', sa.Boolean(), nullable=False),
    sa.Column('raridade', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=50), nullable=False),
    sa.Column('valor', sa.Integer(), nullable=True),
    sa.Column('tipo', postgresql.ENUM('Consumivel', 'Equipamento', name='tipo_item'), nullable=True),
    sa.CheckConstraint('eh_chave = true AND tipo IS NULL OR eh_chave = false AND tipo IS NOT NULL OR eh_chave = false AND tipo IS NULL', name='item_check'),
    sa.CheckConstraint('raridade >= 1 AND raridade <= 5', name='chk_raridade'),
    sa.PrimaryKeyConstraint('id_item', name='item_pkey')
    )
    op.create_table('nivel',
    sa.Column('id_nivel', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nro_nivel', sa.Integer(), nullable=False),
    sa.Column('runas', sa.Integer(), nullable=False),
    sa.CheckConstraint('nro_nivel >= 0', name='chk_nro_nivel'),
    sa.CheckConstraint('runas >= 0', name='chk_runas'),
    sa.PrimaryKeyConstraint('id_nivel', name='nivel_pkey')
    )
    op.create_table('personagem',
    sa.Column('id_personagem', sa.Integer(), server_default=sa.text("nextval('personagem_id_personagem_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('tipo', postgresql.ENUM('Jogavel', 'Njogavel', name='tipo_p'), nullable=False),
    sa.PrimaryKeyConstraint('id_personagem')
    )
    op.create_table('regiao',
    sa.Column('id_regiao', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.String(length=25), nullable=False),
    sa.PrimaryKeyConstraint('id_regiao', name='regiao_pkey'),
    sa.UniqueConstraint('nome', name='regiao_nome_key')
    )
    op.create_table('area',
    sa.Column('id_area', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.String(length=25), nullable=False),
    sa.Column('id_regiao', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_regiao'], ['regiao.id_regiao'], ),
    sa.PrimaryKeyConstraint('id_area')
    )
    op.create_table('equipamento',
    sa.Column('id_equipamento', sa.Integer(), nullable=False),
    sa.Column('tipo', postgresql.ENUM('Escudo', 'Arma', 'Armadura', name='tipo_equipamento'), nullable=False),
    sa.ForeignKeyConstraint(['id_equipamento'], ['item.id_item'], ),
    sa.PrimaryKeyConstraint('id_equipamento', name='equipamento_pkey')
    )
    op.create_table('funcao_npc',
    sa.Column('id_npc', sa.Integer(), nullable=False),
    sa.Column('funcao', postgresql.ENUM('Inimigo', 'Ferreiro', 'Chefe', 'Mercador', 'Campones', name='funcao_p'), nullable=False),
    sa.ForeignKeyConstraint(['id_npc'], ['personagem.id_personagem'], ),
    sa.PrimaryKeyConstraint('id_npc', 'funcao')
    )
    op.create_table('instancia_de_item',
    sa.Column('id_instancia_item', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_item', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_item'], ['item.id_item'], ),
    sa.PrimaryKeyConstraint('id_instancia_item', name='instancia_de_item_pkey')
    )
    op.create_table('npc',
    sa.Column('id_npc', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=25), nullable=False),
    sa.Column('hp', sa.Integer(), nullable=False),
    sa.Column('funcao', postgresql.ENUM('Inimigo', 'Ferreiro', 'Chefe', 'Mercador', 'Campones', name='funcao_p'), nullable=False),
    sa.Column('esta_hostil', sa.Boolean(), nullable=False),
    sa.Column('resistencia', sa.Integer(), nullable=False),
    sa.Column('fraquezas', postgresql.ENUM('Fogo', 'Raio', 'Magia', 'Cortante', 'Contusao', name='tipo_atk'), nullable=True),
    sa.Column('drop_runas', sa.Integer(), nullable=False),
    sa.CheckConstraint('drop_runas >= 0', name='chk_drop_runas'),
    sa.CheckConstraint('hp >= 1', name='chk_hp'),
    sa.ForeignKeyConstraint(['id_npc'], ['personagem.id_personagem'], ),
    sa.PrimaryKeyConstraint('id_npc', name='npc_pkey')
    )
    op.create_table('arma_leve',
    sa.Column('id_arma_leve', sa.Integer(), nullable=False),
    sa.Column('melhoria', sa.Integer(), nullable=False),
    sa.Column('peso', sa.Integer(), nullable=False),
    sa.Column('custo_melhoria', sa.Integer(), nullable=False),
    sa.Column('requisitos', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('habilidade', sa.Integer(), nullable=False),
    sa.Column('dano', sa.Integer(), nullable=False),
    sa.Column('critico', sa.Integer(), nullable=True),
    sa.Column('destreza', sa.Integer(), nullable=False),
    sa.CheckConstraint('array_length(requisitos, 1) = 4', name='chk_requisitos'),
    sa.CheckConstraint('critico IS NULL OR critico >= 1', name='chk_critico'),
    sa.CheckConstraint('custo_melhoria >= 1', name='chk_custo_melhoria'),
    sa.CheckConstraint('dano >= 1', name='chk_dano'),
    sa.CheckConstraint('destreza >= 1', name='chk_destreza'),
    sa.CheckConstraint('melhoria >= 0', name='chk_melhoria'),
    sa.CheckConstraint('peso >= 0', name='chk_peso'),
    sa.ForeignKeyConstraint(['id_arma_leve'], ['equipamento.id_equipamento'], ),
    sa.PrimaryKeyConstraint('id_arma_leve', name='arma_leve_pkey')
    )
    op.create_table('arma_pesada',
    sa.Column('id_arma_pesada', sa.Integer(), nullable=False),
    sa.Column('requisitos', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('melhoria', sa.Integer(), nullable=False),
    sa.Column('peso', sa.Integer(), nullable=False),
    sa.Column('custo_melhoria', sa.Integer(), nullable=False),
    sa.Column('habilidade', sa.Integer(), nullable=False),
    sa.Column('dano', sa.Integer(), nullable=False),
    sa.Column('critico', sa.Integer(), nullable=True),
    sa.Column('forca', sa.Integer(), nullable=False),
    sa.CheckConstraint('array_length(requisitos, 1) = 4', name='chk_requisitos'),
    sa.CheckConstraint('critico IS NULL OR critico >= 1', name='chk_critico'),
    sa.CheckConstraint('custo_melhoria >= 1', name='chk_custo_melhoria'),
    sa.CheckConstraint('dano >= 1', name='chk_dano'),
    sa.CheckConstraint('forca >= 1', name='chk_forca'),
    sa.CheckConstraint('melhoria >= 0', name='chk_melhoria'),
    sa.CheckConstraint('peso >= 0', name='chk_peso'),
    sa.ForeignKeyConstraint(['id_arma_pesada'], ['equipamento.id_equipamento'], ),
    sa.PrimaryKeyConstraint('id_arma_pesada', name='arma_pesada_pkey')
    )
    op.create_table('armadura',
    sa.Column('id_armadura', sa.Integer(), nullable=False),
    sa.Column('requisitos', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('melhoria', sa.Integer(), nullable=False),
    sa.Column('peso', sa.Integer(), nullable=False),
    sa.Column('custo_melhoria', sa.Integer(), nullable=False),
    sa.Column('resistencia', sa.Integer(), nullable=False),
    sa.CheckConstraint('array_length(requisitos, 1) = 4', name='chk_requisitos'),
    sa.CheckConstraint('custo_melhoria >= 1', name='chk_custo_melhoria'),
    sa.CheckConstraint('melhoria >= 0', name='chk_melhoria'),
    sa.CheckConstraint('peso >= 0', name='chk_peso'),
    sa.CheckConstraint('resistencia >= 1', name='chk_resistencia'),
    sa.ForeignKeyConstraint(['id_armadura'], ['equipamento.id_equipamento'], ),
    sa.PrimaryKeyConstraint('id_armadura', name='armadura_pkey')
    )
    op.create_table('cajado',
    sa.Column('id_cajado', sa.Integer(), nullable=False),
    sa.Column('melhoria', sa.Integer(), nullable=False),
    sa.Column('peso', sa.Integer(), nullable=False),
    sa.Column('custo_melhoria', sa.Integer(), nullable=False),
    sa.Column('requisitos', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('habilidade', sa.Integer(), nullable=False),
    sa.Column('dano', sa.Integer(), nullable=False),
    sa.Column('critico', sa.Integer(), nullable=True),
    sa.Column('proficiencia', postgresql.ENUM('E', 'D', 'C', 'B', 'A', 'S', name='tipo_proeficiencia'), nullable=False),
    sa.CheckConstraint('array_length(requisitos, 1) = 4', name='chk_requisitos'),
    sa.CheckConstraint('critico IS NULL OR critico >= 1', name='chk_critico'),
    sa.CheckConstraint('custo_melhoria >= 1', name='chk_custo_melhoria'),
    sa.CheckConstraint('dano >= 1', name='chk_dano'),
    sa.CheckConstraint('melhoria >= 0', name='chk_melhoria'),
    sa.CheckConstraint('peso >= 0', name='chk_peso'),
    sa.ForeignKeyConstraint(['id_cajado'], ['equipamento.id_equipamento'], ),
    sa.PrimaryKeyConstraint('id_cajado', name='cajado_pkey')
    )
    op.create_table('chefe',
    sa.Column('id_chefe', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=25), nullable=False),
    sa.Column('hp', sa.Integer(), nullable=False),
    sa.Column('dano_base', sa.Integer(), nullable=False),
    sa.Column('lembranca', sa.String(length=25), nullable=False),
    sa.Column('desperate_move', sa.Integer(), nullable=False),
    sa.CheckConstraint('dano_base >= 0', name='chk_dano_base_chefe'),
    sa.CheckConstraint('hp >= 1', name='chk_hp'),
    sa.ForeignKeyConstraint(['id_chefe'], ['npc.id_npc'], ),
    sa.PrimaryKeyConstraint('id_chefe', name='chefe_pkey')
    )
    op.create_table('conecta_area',
    sa.Column('id_origem', sa.Integer(), nullable=False),
    sa.Column('id_destino', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_destino'], ['area.id_area'], ),
    sa.ForeignKeyConstraint(['id_origem'], ['area.id_area'], ),
    sa.PrimaryKeyConstraint('id_origem', 'id_destino', name='conecta_area_pkey')
    )
    op.create_table('dialogo',
    sa.Column('id_dialogo', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_npc', sa.Integer(), nullable=True),
    sa.Column('texto', sa.String(length=300), nullable=False),
    sa.Column('e_unico', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_npc'], ['npc.id_npc'], ),
    sa.PrimaryKeyConstraint('id_dialogo', name='dialogo_pkey')
    )
    op.create_table('engaste',
    sa.Column('id_engaste', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_arma', sa.Integer(), nullable=True),
    sa.Column('atributo_extra', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_arma'], ['equipamento.id_equipamento'], ),
    sa.PrimaryKeyConstraint('id_engaste', name='engaste_pkey')
    )
    op.create_table('escudo',
    sa.Column('id_escudo', sa.Integer(), nullable=False),
    sa.Column('requisitos', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('melhoria', sa.Integer(), nullable=False),
    sa.Column('peso', sa.Integer(), nullable=False),
    sa.Column('custo_melhoria', sa.Integer(), nullable=False),
    sa.Column('habilidade', sa.Integer(), nullable=False),
    sa.Column('defesa', sa.Integer(), nullable=False),
    sa.CheckConstraint('array_length(requisitos, 1) = 4', name='chk_requisitos'),
    sa.CheckConstraint('custo_melhoria >= 1', name='chk_custo_melhoria'),
    sa.CheckConstraint('defesa >= 1', name='chk_defesa'),
    sa.CheckConstraint('melhoria >= 0', name='chk_melhoria'),
    sa.CheckConstraint('peso >= 0', name='chk_peso'),
    sa.ForeignKeyConstraint(['id_escudo'], ['equipamento.id_equipamento'], ),
    sa.PrimaryKeyConstraint('id_escudo', name='escudo_pkey')
    )
    op.create_table('ferreiro',
    sa.Column('id_ferreiro', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=25), nullable=False),
    sa.Column('hp', sa.Integer(), nullable=False),
    sa.CheckConstraint('hp >= 1', name='chk_hp'),
    sa.ForeignKeyConstraint(['id_ferreiro'], ['npc.id_npc'], ),
    sa.PrimaryKeyConstraint('id_ferreiro', name='ferreiro_pkey')
    )
    op.create_table('inimigo',
    sa.Column('id_inimigo', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=25), nullable=False),
    sa.Column('hp', sa.Integer(), nullable=False),
    sa.Column('dano_base', sa.Integer(), nullable=False),
    sa.CheckConstraint('dano_base >= 0', name='chk_dano_base'),
    sa.CheckConstraint('hp >= 1', name='chk_hp'),
    sa.ForeignKeyConstraint(['id_inimigo'], ['npc.id_npc'], ),
    sa.PrimaryKeyConstraint('id_inimigo', name='inimigo_pkey')
    )
    op.create_table('instancia_npc',
    sa.Column('id_instancia', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_npc', sa.Integer(), nullable=False),
    sa.Column('id_area', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_area'], ['area.id_area'], ),
    sa.ForeignKeyConstraint(['id_npc'], ['npc.id_npc'], ),
    sa.PrimaryKeyConstraint('id_instancia', name='instancia_npc_pkey')
    )
    op.create_table('jogador',
    sa.Column('id_jogador', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('nome', sa.String(length=25), nullable=False),
    sa.Column('hp', sa.Integer(), nullable=False),
    sa.Column('id_nivel', sa.Integer(), nullable=True),
    sa.Column('id_classe', sa.String(length=14), nullable=True),
    sa.Column('id_area', sa.Integer(), nullable=True),
    sa.Column('vigor', sa.Integer(), nullable=False),
    sa.Column('vitalidade', sa.Integer(), nullable=False),
    sa.Column('intel', sa.Integer(), nullable=False),
    sa.Column('fe', sa.Integer(), nullable=False),
    sa.Column('destreza', sa.Integer(), nullable=False),
    sa.Column('forca', sa.Integer(), nullable=False),
    sa.Column('peso_max', sa.Integer(), nullable=False),
    sa.Column('stamina', sa.Integer(), nullable=False),
    sa.Column('mp', sa.Integer(), nullable=False),
    sa.Column('nivel_atual', sa.Integer(), nullable=False),
    sa.CheckConstraint('destreza >= 1', name='chk_destreza'),
    sa.CheckConstraint('fe >= 1', name='chk_fe'),
    sa.CheckConstraint('forca >= 1', name='chk_forca'),
    sa.CheckConstraint('hp >= 1', name='chk_hp'),
    sa.CheckConstraint('intel >= 1', name='chk_intel'),
    sa.CheckConstraint('mp >= 1', name='chk_mp'),
    sa.CheckConstraint('nivel_atual >= 1', name='chk_nivel_atual'),
    sa.CheckConstraint('peso_max >= 1', name='chk_peso_max'),
    sa.CheckConstraint('stamina >= 1', name='chk_stamina'),
    sa.CheckConstraint('vigor >= 1', name='chk_vigor'),
    sa.CheckConstraint('vitalidade >= 1', name='chk_vitalidade'),
    sa.ForeignKeyConstraint(['id_area'], ['area.id_area'], ),
    sa.ForeignKeyConstraint(['id_classe'], ['classe.nome'], ),
    sa.ForeignKeyConstraint(['id_nivel'], ['nivel.id_nivel'], ),
    sa.PrimaryKeyConstraint('id_jogador', name='jogador_pkey')
    )
    op.create_table('realiza',
    sa.Column('id_golpes', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_npc', sa.Integer(), nullable=True),
    sa.Column('multiplicador', sa.Integer(), nullable=False),
    sa.Column('dano_final', sa.Integer(), nullable=False),
    sa.CheckConstraint('dano_final >= 1', name='chk_dano_final'),
    sa.CheckConstraint('multiplicador >= 1', name='chk_multiplicador'),
    sa.ForeignKeyConstraint(['id_npc'], ['npc.id_npc'], ),
    sa.PrimaryKeyConstraint('id_golpes', name='realiza_pkey')
    )
    op.create_table('selo',
    sa.Column('id_selo', sa.Integer(), nullable=False),
    sa.Column('melhoria', sa.Integer(), nullable=False),
    sa.Column('peso', sa.Integer(), nullable=False),
    sa.Column('custo_melhoria', sa.Integer(), nullable=False),
    sa.Column('requisitos', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('habilidade', sa.Integer(), nullable=False),
    sa.Column('dano', sa.Integer(), nullable=False),
    sa.Column('critico', sa.Integer(), nullable=True),
    sa.Column('milagre', sa.Integer(), nullable=False),
    sa.CheckConstraint('array_length(requisitos, 1) = 4', name='chk_requisitos'),
    sa.CheckConstraint('critico IS NULL OR critico >= 1', name='chk_critico'),
    sa.CheckConstraint('custo_melhoria >= 1', name='chk_custo_melhoria'),
    sa.CheckConstraint('dano >= 1', name='chk_dano'),
    sa.CheckConstraint('melhoria >= 0', name='chk_melhoria'),
    sa.CheckConstraint('milagre >= 1', name='chk_milagre'),
    sa.CheckConstraint('peso >= 0', name='chk_peso'),
    sa.ForeignKeyConstraint(['id_selo'], ['equipamento.id_equipamento'], ),
    sa.PrimaryKeyConstraint('id_selo', name='selo_pkey')
    )
    op.create_table('area_de_morte',
    sa.Column('id_area_de_morte', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_jogador', sa.Integer(), nullable=True),
    sa.Column('id_area', sa.Integer(), nullable=True),
    sa.Column('runas_dropadas', sa.Integer(), nullable=False),
    sa.CheckConstraint('runas_dropadas >= 0', name='chk_runas_dropadas'),
    sa.ForeignKeyConstraint(['id_area'], ['area.id_area'], ),
    sa.ForeignKeyConstraint(['id_jogador'], ['jogador.id_jogador'], ),
    sa.PrimaryKeyConstraint('id_area_de_morte', name='area_de_morte_pkey')
    )
    op.create_table('chefes_derrotados',
    sa.Column('id_chefe', sa.Integer(), nullable=False),
    sa.Column('id_jogador', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_chefe'], ['chefe.id_chefe'], ),
    sa.ForeignKeyConstraint(['id_jogador'], ['jogador.id_jogador'], ),
    sa.PrimaryKeyConstraint('id_chefe', 'id_jogador', name='chefes_derrotados_pkey')
    )
    op.create_table('equipados',
    sa.Column('id_jogador', sa.Integer(), nullable=False),
    sa.Column('mao_direita', sa.Integer(), nullable=True),
    sa.Column('mao_esquerda', sa.Integer(), nullable=True),
    sa.Column('armadura', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['armadura'], ['equipamento.id_equipamento'], ),
    sa.ForeignKeyConstraint(['id_jogador'], ['jogador.id_jogador'], ),
    sa.ForeignKeyConstraint(['mao_direita'], ['equipamento.id_equipamento'], ),
    sa.ForeignKeyConstraint(['mao_esquerda'], ['equipamento.id_equipamento'], ),
    sa.PrimaryKeyConstraint('id_jogador', name='equipados_pkey')
    )
    op.create_table('localizacao_da_instancia_de_item',
    sa.Column('id_instancia_item', sa.Integer(), nullable=False),
    sa.Column('area', sa.Integer(), nullable=True),
    sa.Column('inventario_jogador', sa.Integer(), nullable=True),
    sa.CheckConstraint('area IS NOT NULL AND inventario_jogador IS NULL OR inventario_jogador IS NOT NULL AND area IS NULL OR inventario_jogador IS NOT NULL AND area IS NOT NULL', name='localizacao_da_instancia_de_item_check'),
    sa.ForeignKeyConstraint(['area'], ['area.id_area'], ),
    sa.ForeignKeyConstraint(['id_instancia_item'], ['instancia_de_item.id_instancia_item'], ),
    sa.ForeignKeyConstraint(['inventario_jogador'], ['jogador.id_jogador'], ),
    sa.PrimaryKeyConstraint('id_instancia_item', name='localizacao_da_instancia_de_item_pkey')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('localizacao_da_instancia_de_item')
    op.drop_table('equipados')
    op.drop_table('chefes_derrotados')
    op.drop_table('area_de_morte')
    op.drop_table('selo')
    op.drop_table('realiza')
    op.drop_table('jogador')
    op.drop_table('instancia_npc')
    op.drop_table('inimigo')
    op.drop_table('ferreiro')
    op.drop_table('escudo')
    op.drop_table('engaste')
    op.drop_table('dialogo')
    op.drop_table('conecta_area')
    op.drop_table('chefe')
    op.drop_table('cajado')
    op.drop_table('armadura')
    op.drop_table('arma_pesada')
    op.drop_table('arma_leve')
    op.drop_table('npc')
    op.drop_table('instancia_de_item')
    op.drop_table('funcao_npc')
    op.drop_table('equipamento')
    op.drop_table('area')
    op.drop_table('regiao')
    op.drop_table('personagem')
    op.drop_table('nivel')
    op.drop_table('item')
    op.drop_table('consumivel')
    op.drop_table('classe')
    # ### end Alembic commands ###
