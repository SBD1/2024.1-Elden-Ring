
CREATE TYPE funcao_p AS ENUM
    ('Inimigo', 'Ferreiro', 'Chefe', 'Mercador', 'Campones')

CREATE TYPE tipo_atk AS ENUM
    ('Fogo', 'Raio', 'Magia', 'Cortante', 'Contusao');

CREATE TYPE tipo_p AS ENUM
    ('Jogavel', 'Njogavel');

CREATE TABLE IF NOT EXISTS personagem (
    id_personagem INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    nome CHAR(25) NOT NULL,
    hp INTEGER NOT NULL,
    CHECK(hp>=1),
    tipo tipo_p NOT NULL,
    PRIMARY KEY (id_personagem)
);

CREATE TABLE IF NOT EXISTS npc (
    id_npc INTEGER PRIMARY KEY REFERENCES personagem(id_personagem),
    nome CHAR(25) NOT NULL,
    hp INTEGER NOT NULL,
    CHECK(hp>=1),
    funcao funcao_p NOT NULL,
    esta_hostil BOOLEAN NOT NULL,
    resistencia INTEGER NOT NULL,
    fraquezas tipo_atk,
    drop_runas INTEGER NOT NULL,
    CHECK(drop_runas>=0)
);

CREATE TABLE IF NOT EXISTS inimigo(
    id_inimigo INTEGER PRIMARY KEY REFERENCES personagem(id_personagem),
    esta_hostil BOOLEAN NOT NULL,
    resistencia INTEGER NOT NULL,
    fraquezas INTEGER NOT NULL,
    drop_runas INTEGER NOT NULL,
	CHECK(drop_runas>=0),
    dano_base INTEGER NOT NULL,
	CHECK(dano_base>=0),
    nome CHAR(25) NOT NULL,
    hp INTEGER NOT NULL,
	CHECK(hp>=0)
);

CREATE TABLE IF NOT EXISTS chefe(
    id_chefe INTEGER PRIMARY KEY REFERENCES personagem(id_personagem),
    nome CHAR(25) NOT NULL,
    hp INTEGER NOT NULL,
	CHECK(hp>=0),
    esta_hostil BOOLEAN NOT NULL,
    resistencia INTEGER NOT NULL,
    fraquezas INTEGER NOT NULL,
    drop_runas INTEGER NOT NULL,
	CHECK(drop_runas>=0),
    dano_base INTEGER NOT NULL,
	CHECK(dano_base>=0),
    lembranca CHAR(25) NOT NULL,
    desperate_move INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS regiao(
    id_regiao INTEGER PRIMARY KEY,
    nome CHAR(10) UNIQUE
);

CREATE TABLE IF NOT EXISTS area(
    id_area INTEGER PRIMARY KEY,
    nome CHAR(10) UNIQUE,
    id_regiao INTEGER REFERENCES regiao(id_regiao)
);

CREATE TABLE IF NOT EXISTS ferreiro(
    id_ferreiro INTEGER PRIMARY KEY REFERENCES personagem(id_personagem),
    nome CHAR(25) NOT NULL,
    hp INTEGER NOT NULL,
    esta_hostil BOOLEAN NOT NULL,
    resistencia INTEGER NOT NULL,
    drop_runas INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS area_de_morte(
    id_area_de_morte INTEGER PRIMARY KEY,
    id_jogador INTEGER REFERENCES personagem(id_personagem),
    id_area INTEGER REFERENCES area(id_area),
    runas_dropadas INTEGER NOT NULL,
    CHECK(runas_dropadas>=0)
);

CREATE TABLE IF NOT EXISTS CLASSE(
    nome CHAR(14) PRIMARY KEY,
    base_vit INTEGER NOT NULL,
    base_vig INTEGER NOT NULL,
    base_int INTEGER NOT NULL,
    base_fe INTEGER NOT NULL,
    base_dex INTEGER NOT NULL,
    base_str INTEGER NOT NULL,
    CHECK(base_vit>=0),
    CHECK(base_vig>=0),
    CHECK(base_int>=0),
    CHECK(base_fe>=0),
    CHECK(base_dex>=0),
    CHECK(base_str>=0)
);

CREATE TABLE IF NOT EXISTS nivel(
    id_nivel INTEGER PRIMARY KEY,
    nro_nivel INTEGER NOT NULL,
    CHECK(nro_nivel>=0),
    runas INTEGER NOT NULL,
    CHECK(runas>=0)
);

CREATE TABLE IF NOT EXISTS jogador(
    id_jogador INTEGER PRIMARY KEY,
    id_nivel INTEGER REFERENCES nivel(id_nivel),
    id_classe CHAR(14) REFERENCES classe(nome),
    id_area INTEGER REFERENCES area(id_area),
    vigor INTEGER NOT NULL,
    vitalidade INTEGER NOT NULL,
    intel INTEGER NOT NULL,
    fe INTEGER NOT NULL,
    destreza INTEGER NOT NULL,
    forca INTEGER NOT NULL,
    peso_max INTEGER NOT NULL,
    stamina INTEGER NOT NULL,
    mp INTEGER NOT NULL,
    nivel_atual INTEGER NOT NULL,
    CHECK(nivel_atual>=1),
    CHECK(vigor>=1),
    CHECK(intel>=1),
    CHECK(vitalidade>=1),
    CHECK(fe>=1),
    CHECK(destreza>=1),
    CHECK(forca>=1),
    CHECK(peso_max>=1),
    CHECK(mp>=1),
    CHECK(stamina>=1)
);

CREATE TABLE IF NOT EXISTS conecta_area(
    id_origem INTEGER REFERENCES area(id_area),
    id_destino INTEGER REFERENCES area(id_area),
	PRIMARY KEY (id_origem, id_destino)
);

CREATE TABLE IF NOT EXISTS realiza(
    id_golpes INTEGER PRIMARY KEY,
    id_npc INTEGER REFERENCES npc(id_npc),
    multiplicador INTEGER NOT NULL,
    CHECK(multiplicador>=1),
    dano_final INTEGER NOT NULL,
    CHECK(dano_final>=1)
);

CREATE TABLE IF NOT EXISTS item(
    id_item INTEGER PRIMARY KEY,
    eh_chave BOOLEAN NOT NULL,
    raridade INTEGER NOT NULL,
    nome CHAR(25) NOT NULL,
    valor INTEGER,
    tipo INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS inventario(
    id_usuario INTEGER PRIMARY KEY REFERENCES personagem(id_personagem),
    seccoes CHAR(15) NOT NULL
);


CREATE TABLE IF NOT EXISTS instancia_de_item(
    id_instancia INTEGER PRIMARY KEY,
    id_item INTEGER REFERENCES item(id_item),
    id_area INTEGER REFERENCES area(id_area),
    id_inventario INTEGER REFERENCES inventario(id_usuario)
);

CREATE TABLE IF NOT EXISTS EQUIPAMENTO(
    id_equipamento INTEGER PRIMARY KEY REFERENCES item(id_item),
    tipo CHAR(15) NOT NULL,
    requisitos INTEGER,
    melhoria INTEGER NOT NULL,
    CHECK(melhoria>=0),
    peso INTEGER NOT NULL,
    CHECK(peso>=0),
    custo_melhoria INTEGER NOT NULL,
    CHECK(custo_melhoria>=1)
);

CREATE TABLE IF NOT EXISTS item_inventario(
    id_inventario INTEGER REFERENCES personagem(id_personagem),
    id_instancia_item INTEGER REFERENCES item(id_item),
    quantidade INTEGER NOT NULL,
    PRIMARY KEY(id_inventario, id_instancia_item)
);

